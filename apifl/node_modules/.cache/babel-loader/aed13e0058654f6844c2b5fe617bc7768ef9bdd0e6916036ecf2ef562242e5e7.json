{"ast":null,"code":"\"use client\";\n\n// src/useSuspenseQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\nfunction useSuspenseQuery(options, queryClient) {\n  return useBaseQuery({\n    ...options,\n    enabled: true,\n    suspense: true,\n    throwOnError: defaultThrowOnError\n  }, QueryObserver, queryClient);\n}\nexport { useSuspenseQuery };","map":{"version":3,"names":["QueryObserver","useBaseQuery","defaultThrowOnError","useSuspenseQuery","options","queryClient","enabled","suspense","throwOnError"],"sources":["C:\\Users\\kishl\\Downloads\\code_oin\\node_modules\\@tanstack\\react-query\\src\\useSuspenseQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type { UseSuspenseQueryOptions, UseSuspenseQueryResult } from './types'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\n\nexport function useSuspenseQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseSuspenseQueryResult<TData, TError> {\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n    },\n    QueryObserver,\n    queryClient,\n  ) as UseSuspenseQueryResult<TData, TError>\n}\n"],"mappings":";;;AACA,SAASA,aAAA,QAAqB;AAC9B,SAASC,YAAA,QAAoB;AAC7B,SAASC,mBAAA,QAA2B;AAI7B,SAASC,iBAMdC,OAAA,EACAC,WAAA,EACuC;EACvC,OAAOJ,YAAA,CACL;IACE,GAAGG,OAAA;IACHE,OAAA,EAAS;IACTC,QAAA,EAAU;IACVC,YAAA,EAAcN;EAChB,GACAF,aAAA,EACAK,WACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}